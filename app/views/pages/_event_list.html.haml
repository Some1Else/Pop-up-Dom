%section.white-content.events
  .section-heading
    .container
      .heading
        %h2
          .new-dim.new-dim-static
            .text
              Dogodki

  .container
    .content      
      .event-list
        - events_with_images = 0
        - @events.each_with_index do |e, i|
          .event.category-list{:class => "#{e.open_for_reservation ? 'reservation-enabled' : ''}"}
            .cat.white-on-dark
              = e.event_category.name
            - if e.event_images.size == 1
              .pic.noSlider
                - if e.event_images.first.file.to_s.end_with? 'gif' or e.event_images.first.file.to_s.end_with? 'GIF'
                  = image_tag e.event_images.first.file, :style => 'width: 100%;', :class => 'rsImg'
                - else
                  = image_tag e.event_images.first.file.big_thumb, :style => 'width: 100%;', :class => 'rsImg'

            - if e.event_images.size > 1
              - events_with_images += 1
              - if events_with_images % 2 == 0
                .pic.royalSlider.rsDefault.rsEven
                  - e.event_images.each do |image|
                    - if image.file.to_s.end_with? 'gif' or e.event_images.first.file.to_s.end_with? 'GIF'
                      = image_tag image.file, :style => 'width: 100%;', :class => 'rsImg'
                    - else
                      = image_tag image.file.big_thumb, :style => 'width: 100%;', :class => 'rsImg'

              - else
                .pic.royalSlider.rsDefault.rsOdd
                  - e.event_images.each do |image|
                    - if image.file.to_s.end_with? 'gif' or e.event_images.first.file.to_s.end_with? 'GIF'
                      = image_tag image.file, :style => 'width: 100%;', :class => 'rsImg'
                    - else
                      = image_tag image.file.big_thumb, :style => 'width: 100%;', :class => 'rsImg'
              
            .insides
              %h3= e.name
              - if e.event_occurances.empty?
                - occurances = [e.event_occurances.build(:begins_at => e.begins_at)]
              - else
                - occurances = e.event_occurances

              - occurances.each_with_index do |occurance, idx|

                - if occurance.begins_at < Time.now
                  - class_name = 'old'
                - else
                  - class_name = 'upcoming'

                %h4{:class => class_name}
                  - case occurance.begins_at.strftime "%A"
                    - when "Monday"
                      Ponedeljek,
                      
                    - when "Tuesday"
                      Torek,
                      
                    - when "Wednesday"
                      Sreda,
                      
                    - when "Thursday"
                      Četrtek,
                      
                    - when "Friday"
                      Petek,

                    - when "Saturday"
                      Sobota,

                    - when "Sunday"
                      Nedelja,
                  
                  - if occurance.duration_important?
                    = (occurance.begins_at.strftime "%-d.%-m.%y %-H:%M") + (occurance.ends_at.strftime "-%-H:%M")
                  - else
                    = occurance.begins_at.strftime "%-d.%-m.%y ob %-H:%M"


              .description
                != Markdown.new(e.description).to_html
            
              - if e.open_for_reservation?
                .buy
                  - subject = e.reservation_email_subject.empty? ? e.name : e.reservation_email_subject
                  = link_to "mailto:#{e.reservation_email}?subject=Rezervacija: #{subject}&body=Želim karto za Pop-up dom dogodek dogodek #{e.name}" do
                    .new-dim.new-dim-interactive
                      .text
                        Rezerviraj
                - unless e.price.blank?
                  .price
                    != "€&#8239;#{e.price.try(:round)}"
            - if e.price and e.price > 0 and false
              .buy
                %a{:href => '#'}
                  .new-dim.new-dim-interactive
                    .text
                      Kupi&#8239;karte
              .price
                != "€&#8239;#{e.price.round}"

:coffeescript
  $('.buy a').mousedown (e) ->
    doit = ->
      e.currentTarget.click()

    setTimeout doit, 300

:coffeescript
  $ ->
    eventPack = new Packery($('.event-list').get(0), {itemSelector: '.event'})
    $('.event-list').imagesLoaded ->
      eventPack.layout()